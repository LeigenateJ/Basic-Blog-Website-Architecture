<div class="container">

  <div class="header">
    <div class="headerText">
      <h1>TRAVEL BLOG</h1>
      <p>Let's explore the world!</p>
    </div>
  </div>

  <div class="nav">


    <div class="nav_logo">
      <img src="./images/logo.png" width="150px">
    </div>
    <div class="nav_menu">
      <ul class="nav_ul">
        <li><a href="./" id="sortByDefault1">HOME</a></li>
        <li><a href="./allBlogs" id="sortByDefault">ALL BLOGS</a></li>
        <li><a href="./myBlogs">MY BLOGS</a></li>
        <li><a href="./addNewArticles">POST BLOGS</a></li>

    </div>
    </ul>
    <div class="nav_user">
      <ul class="nav_ul">
        <li><a href="./logout" style="font-weight:100;">Log out</a></li>

      </ul>
    </div>
  </div>
  <div class="left_sidebar">
    <div class="user_avatar_wrapper">
      <div class="user_avatar">
        <span><a href="./editAccount"><img src={{user.avatar_path}} class="img_avatar img_circle"></a></span>
      </div>
      <div class="user_name" style="font-size: 15px;">
        <span>
          <p>Username: </p>{{user.user_name}}
          <p>First name: </p>{{user.fname}}
          <p>Last name: </p>{{user.lname}}
          <p>Date of birth: </p>{{user.dob}}
          <p>Decription: </p>{{user.description}}

        </span>
        <div class="edit">
          <p><a href="./editAccount">Edit</a></p>
        </div>
      </div>
    </div>
  </div>
  <div class="right_sidebar">
    <ul>
      <div class="nav_menu_sort">SORTED BY</div>
      <li><a id="sortByTitle">ARTCILE TITLE</a></li>
      <li><a id="sortByUsername">USERNAME</a></li>
      <li><a id="sortByDate">DATE</a></li>
    </ul>
  </div>

  <div class="content">
    {{#each articles}}
    <div class="content_wrapper" id="contentInArticle{{article_id}}">
      <div class="article_wrapper">

        <div class="article_wrapper_header">
          <div class="user_avatar_wrapper">
            <div class="user_avatar">
              <span><img src={{this.user.avatar_path}} class="img_avatar img_circle"></span>
            </div>
            <div class="user_name">
              <span>
                <p>{{this.user.user_name}}</p>
              </span>
            </div>
          </div>

          <div class="article_post_time">
            <div>
              <p>Post Time: {{this.post_time}}</p>
            </div>
          </div>
             <div class="article_edit">
            <a href="./editArticle?articleId={{this.article_id}}">edit</a>
          </div>
          <div class="article_delete">
            <a href="./deleteArticle?articleId={{this.article_id}}">delete</a>
          </div>
        </div>
        <div class="article_heading">
          <p>{{this.heading}}</p>
        </div>
        <div class="article_img_area">
          <div class="article_img">
            <span><img src={{this.img_path}}></span>
          </div>

        </div>
        <div class="article_text">
          {{{this.article_text}}}
        </div>
      </div>

      <div class="comment_wrapper">
        <p><button class="ctrl-show">show comment</button> <button class=""
            onclick="showComment({{this.article_id}})">reply</button></p>
        <div id="reply{{this.article_id}}" style="display: none;margin-top:10px">
          <textarea name="" id="commentContentForArticle{{this.article_id}}" cols="50" rows="3"></textarea>
          <br>
          <button class="submitOne_commit" id="commentFromArticle{{this.article_id}}">submit</button>
        </div>
        <div class="comment_list" style="display: none;">
          {{#each this.commentList}}
          {{!-- action --}}
          <div class="comment_content">
            <div class="comment_left_side_bar">
              <div class="user_avatar">
                <img src={{this.avatar_path}} class="img_avatar img_circle">
              </div>
            </div>
            <div class="comment_content_wrapper">
              <div class="user_name">
                <p>{{this.user_name}}</p>
              </div>
              <div class="comment_text">
                <p>{{this.comment_text}}</p>
              </div>

              <div class="comment_interaction">
                <span class="post_time">{{this.post_time}}</span>
                <a id="/addordeleteLike?article_id={{this.article_id}}&comment_id={{this.comment_id}}&up_num=" class="like">
                  {{#if this.good}}
                  <i style="background-position:-153px -90px;"></i>
                  {{else}}
                  <i style="background-position:-153px -25px;"></i>
                  {{/if}}<span>{{this.up_num}}</span></a>
                <a id="/addordeleteHate?article_id={{this.article_id}}&comment_id={{this.comment_id}}&down_num=" class="hate">
                  {{#if this.bad}}
                  <i style="background-position:-153px -217px;"></i>
                  {{else}}
                  <i style="background-position:-153px -153px;"></i>
                  {{/if}}<span>{{this.down_num}}</span></a>
                <a class="reply" onclick="replytwo({{this.comment_id}})">reply</a>
                 {{#if this.isDelete}}<button id="delBtnOfComment{{this.comment_id}}" onclick="deleteReply({{this.comment_id}})">delete</button>
                 {{/if}}
              </div>
              <div id="replytwo{{this.comment_id}}" style="display: none;margin-top:10px">
                <textarea name="" id="textOf&article_id={{this.article_id}}&upper_comment_id={{this.comment_id}}" cols="50" rows="3"></textarea>
                <br>
                <button class="submittwo_commit" id="&article_id={{this.article_id}}&upper_comment_id={{this.comment_id}}">submit</button>
              </div>
              <div class="secondLevelOfComment">
                {{#each this.innerComments}}
                <div class="comment_content comment_inner_comment">
                  <div class="user_avatar">
                    <img src={{this.avatar_path}} class="img_avatar img_circle">
                  </div>
                  <div class="comment_content_wrapper">
                    <div class="comment_poster_msg">
                      <div class="user_name">
                        <p>{{this.user_name}}</p>
                      </div>
                      <div class="comment_inner_comment_content">
                        <p>{{this.comment_text}}</p>
                      </div>
                    </div>
                    <div class="comment_interaction">
                      <span class="post_time">{{this.post_time}}</span>
                      <a id="/addordeleteLike?article_id={{this.article_id}}&comment_id={{this.comment_id}}&up_num=" class="like">
                        {{#if this.good}}
                        <i style="background-position:-153px -90px;"></i>
                        {{else}}
                        <i style="background-position:-153px -25px;"></i>
                        {{/if}}<span>{{this.up_num}}</span></a>
                      <a id="/addordeleteHate?article_id={{this.article_id}}&comment_id={{this.comment_id}}&down_num=" class="hate">
                        {{#if this.bad}}
                        <i style="background-position:-153px -217px;"></i>
                        {{else}}
                        <i style="background-position:-153px -153px;"></i>
                        {{/if}}<span>{{this.down_num}}</span></a>
                      <a class="reply" onclick="replytwo({{this.comment_id}})">reply</a>
                      {{#if this.isDelete}}<button id="delBtnOfComment{{this.comment_id}}" onclick="deleteReply({{this.comment_id}})">delete</button>
                      {{/if}}
                    </div>
                    <div id="replytwo{{this.comment_id}}" style="display: none;margin-top:10px">
                      <textarea name="" id="textOf&article_id={{this.article_id}}&upper_comment_id={{this.comment_id}}" cols="50" rows="3"></textarea>
                      <br>
                      <button class="submittwo_commit" id="&article_id={{this.article_id}}&upper_comment_id={{this.comment_id}}">submit</button>
                    </div>
                    <div class="lastLevelOfComment" style="margin: 15px;">
                      {{#each this.innerComments}}
                      <div class="comment_content comment_inner_comment">
                        <div class="user_avatar">
                          <img src={{this.avatar_path}} class="img_avatar img_circle">
                        </div>
                        <div class="comment_content_wrapper">
                          <div class="comment_poster_msg">
                            <div class="user_name">
                              <p>{{this.user_name}}</p>
                            </div>
                            <div class="comment_inner_comment_content">
                              <p>{{this.comment_text}}</p>
                            </div>
                          </div>
                          <div class="comment_interaction">
                            <span class="post_time">{{this.post_time}}</span>
                            <a id="/addordeleteLike?article_id={{this.article_id}}&comment_id={{this.comment_id}}&up_num=" class="like">
                              {{#if this.good}}
                              <i style="background-position:-153px -90px;"></i>
                              {{else}}
                              <i style="background-position:-153px -25px;"></i>
                              {{/if}}<span>{{this.up_num}}</span></a>
                            <a id="/addordeleteHate?article_id={{this.article_id}}&comment_id={{this.comment_id}}&down_num=" class="hate">
                              {{#if this.bad}}
                              <i style="background-position:-153px -217px;"></i>
                              {{else}}
                              <i style="background-position:-153px -153px;"></i>
                              {{/if}}<span>{{this.down_num}}</span></a>
                              {{#if this.isDelete}}<button id="delBtnOfComment{{this.comment_id}}" onclick="deleteReply({{this.comment_id}})">delete</button>
                              {{/if}}
                          </div>
                        </div>

                      </div>
                      {{/each}}
                    </div>
                  </div>

                </div>
                {{/each}}
              </div>

            </div>

          </div>
          {{/each}}
        </div>
      </div>
    </div>
    {{/each}}
  </div>

</div>


<script>
generateDisplayCommentBtn();

  generateLikeAndHateStatus();

  submitOne_commit();

  submittwo_commit();

  generateSorting();

  function generateDisplayCommentBtn () {
    let ctrlList = document.getElementsByClassName("ctrl-show");
    let comment_list = document.getElementsByClassName("comment_list");
    ctrlList = Array.from(ctrlList)
    comment_list = Array.from(comment_list)

    for (let i = 0; i < ctrlList.length; i++) {
      ctrlList[i].addEventListener('click', function () {
        if (comment_list[i].style.display == "grid") {
          comment_list[i].style.display = "none"
          ctrlList[i].innerText = "show comment"
        } else {
          comment_list[i].style.display = "grid"
          ctrlList[i].innerText = "hide comment"
        }

      })
    }
  }

  function showComment(id) {
    let one_leave = document.getElementById("reply" + id)
    if (one_leave.style.display == "block") {
      one_leave.style.display = "none"
    } else {
      one_leave.style.display = "block"
    }
  }

  function generateLikeAndHateStatus(){
    let like_list = document.querySelectorAll(".like");
    let hate_list = document.querySelectorAll(".hate");
    like_list = Array.from(like_list);
    hate_list = Array.from(hate_list);

    for(let i = 0; i < like_list.length; i++) {

      let imgLike = like_list[i].querySelector("i");
      let imgHate = hate_list[i].querySelector("i");

      if(like_list[i].onclick == null || like_list[i].onclick == "" || like_list[i].onclick == undefined){
      like_list[i].onclick = async function () {
        let up_num = like_list[i].querySelector("span")
   
        let response = await updateNum(like_list[i].id, up_num.innerText);
        up_num.innerText = response.up_num;

        if(imgLike.style.backgroundPositionY == "-25px" && imgHate.style.backgroundPositionY == "-153px"){
          imgLike.style.backgroundPositionY = "-90px"
         
        }else{
          imgLike.style.backgroundPositionY = "-25px";
         
          }
      };

      hate_list[i].onclick = async function () {
        let down_num = hate_list[i].querySelector("span")
      
        let response = await updateNum(hate_list[i].id, down_num.innerText);
        down_num.innerText = response.down_num;

        if(imgHate.style.backgroundPositionY == "-153px" && imgLike.style.backgroundPositionY == "-25px"){
          imgHate.style.backgroundPositionY = "-217px"
        
        }else{
          imgHate.style.backgroundPositionY = "-153px";
        
          }
        };
      }
    }
  }

  async function updateNum(url_01, url_02){
  let response = await fetch(`${url_01}${url_02}`);
 
  let Json = await response.json();
  
  return Json;
  }

  function submitOne_commit() {
    let submitOne_commit_List = document.querySelectorAll(".submitOne_commit");
    submitOne_commit_List = Array.from(submitOne_commit_List);
    
    for(let i = 0; i < submitOne_commit_List.length; i++){
      addCommentEvent(submitOne_commit_List[i])
    }
  }

  function generateComment(grandparent, comment) {
    let comment_list = grandparent.querySelector(".comment_list");
   
  
    comment_list.innerHTML += `
    <div class="comment_content">
      <div class="comment_left_side_bar">
        <div class="user_avatar">
          <img src=${comment.avatar_path} class="img_avatar img_circle">
        </div>
      </div>
      <div class="comment_content_wrapper">
        <div class="user_name">
          <p>${comment.user_name}</p>
        </div>
        <div class="comment_text">
          <p>${comment.comment_text}</p>
        </div>

        <div class="comment_interaction">
          <span class="post_time">${comment.post_time}</span>
            <a id="/addordeleteLike?article_id=${comment.article_id}&comment_id=${comment.comment_id}&up_num=" class="like">
                  <i style="background-position:-153px -25px;"></i><span>0</span></a>
            <a id="/addordeleteHate?article_id=${comment.article_id}&comment_id=${comment.comment_id}&down_num=" class="hate">
                  <i style="background-position:-153px -153px;"></i><span>0</span></a>
            <a class="reply" onclick="replytwo(${comment.comment_id})">reply</a>
                  <button id="delBtnOfComment${comment.comment_id}" onclick="deleteReply(${comment.comment_id})">delete</button>
        </div>
        <div id="replytwo${comment.comment_id}" style="display: none;margin-top:10px">
          <textarea name="" id="textOf&article_id=${comment.article_id}&upper_comment_id=${comment.comment_id}" cols="50" rows="3"></textarea><br>
          <button class="submittwo_commit" id="&article_id=${comment.article_id}&upper_comment_id=${comment.comment_id}">submit</button>
        </div>
        <div class="secondLevelOfComment" style="margin: 15px;">
        </div>`
  }

  function replytwo(comment_id) {
    let one_leave = document.getElementById("replytwo" + comment_id)
    if (one_leave.style.display == "block") {
      one_leave.style.display = "none"
    } else {
      one_leave.style.display = "block"
    }
  }

  function submittwo_commit() {
    let submittwo_commit_List = document.querySelectorAll(".submittwo_commit");
    submittwo_commit_List = Array.from(submittwo_commit_List);
    
    for(let i = 0; i < submittwo_commit_List.length; i++){
      addInnerCommentEvent(submittwo_commit_List[i]); 
    }

  }

  function generateInnerComment(grandparent, comment) {

    let isLastLevelComment = grandparent.querySelector(".lastLevelOfComment");
    let comment_wrapper = grandparent.querySelector(".secondLevelOfComment");

    if(comment_wrapper != null) {
      
      comment_wrapper.innerHTML += `
      <div class="comment_content comment_inner_comment">
      <div class="user_avatar">
        <img src=${comment.avatar_path} class="img_avatar img_circle">
      </div>
      <div class="comment_content_wrapper">
        <div class="comment_poster_msg">
          <div class="user_name">
            <p>${comment.user_name}</p>
          </div>
          <div class="comment_inner_comment_content">
            <p>${comment.comment_text}</p>
          </div>
        </div>
        <div class="comment_interaction">
          <span class="post_time">${comment.post_time}</span>
            <a id="/addordeleteLike?article_id=${comment.article_id}&comment_id=${comment.comment_id}&up_num=" class="like">
              <i style="background-position:-153px -25px;;"></i><span>0</span></a>
            <a id="/addordeleteHate?article_id=${comment.article_id}&comment_id=${comment.comment_id}&down_num=" class="hate">
              <i style="background-position:-153px -153px;;"></i><span>0</span></a>
            <a class="reply" onclick="replytwo(${comment.comment_id})">reply</a>
              <button id="delBtnOfComment${comment.comment_id}" onclick="deleteReply(${comment.comment_id})">delete</button>
        </div>
        <div id="replytwo${comment.comment_id}" style="display: none;margin-top:10px">
          <textarea name="" id="textOf&article_id=${comment.article_id}&upper_comment_id=${comment.comment_id}" cols="50" rows="3"></textarea><br>
          <button class="submittwo_commit" id="&article_id=${comment.article_id}&upper_comment_id=${comment.comment_id}">submit</button>
        </div>
        <div class="lastLevelOfComment" style="margin: 15px;">
        </div>
      </div>`;
    } else if(isLastLevelComment != null){
      isLastLevelComment.innerHTML += `
      <div class="comment_content comment_inner_comment">
        <div class="user_avatar">
          <img src=${comment.avatar_path} class="img_avatar img_circle">
        </div>
        <div class="comment_content_wrapper">
          <div class="comment_poster_msg">
            <div class="user_name">
              <p>${comment.user_name}</p>
            </div>
            <div class="comment_inner_comment_content">
              <p>${comment.comment_text}</p>
            </div>
          </div>
          <div class="comment_interaction">
            <span class="post_time">${comment.post_time}</span>
              <a id="/addordeleteLike?article_id=${comment.article_id}&comment_id=${comment.comment_id}&up_num=" class="like">
                <i style="background-position:-153px -25px;"></i><span>0</span></a>
              <a id="/addordeleteHate?article_id=${comment.article_id}&comment_id=${comment.comment_id}&down_num=" class="hate">
                <i style="background-position:-153px -153px;"></i><span>0</span></a>
              <button id="delBtnOfComment${comment.comment_id}" onclick="deleteReply(${comment.comment_id})">delete</button>
          </div>
        </div>
      </div>`;
    }

  }

  function addCommentEvent(node){
  

    node.onclick = async function () {
        let parent = node.parentNode;
     
        let  grandparent = parent.parentNode;
       

        let article_id = node.id.substring(18);
      

        let replyConetent = document.querySelector(`#commentContentForArticle${article_id}`);
     
        if(isNull(replyConetent.value) == true) {
          alert("Please enter anything :)")
        } else {
        
          let response = await fetch("/commitbyone", {
              method: "POST",
              headers: {'Content-Type': 'application/x-www-form-urlencoded'},
              body: `comment_text=${replyConetent.value}&article_id=${article_id}`
              });

          let Json = await response.json();
        

          generateComment(grandparent, Json);

          parent.style.display = "none";
          replyConetent.value = "";

          generateLikeAndHateStatus();

          submittwo_commit();
        }
      };
    
  }

  function addInnerCommentEvent(node) {

    if(node.onclick == null || node.onclick == "" || node.onclick == undefined){
    node.onclick = async function () {
        let parent = node.parentNode;
       

        let  grandparent = parent.parentNode;
      
        let info = node.id;
        

        let replyConetent = parent.querySelector("textarea");
      
        if(isNull(replyConetent.value) == true) {
          alert("Please enter anything :)")
        } else {
        
          let response = await fetch("/commitbytwo", {
              method: "POST",
              headers: {'Content-Type': 'application/x-www-form-urlencoded'},
              body: `comment_text=${replyConetent.value}${info}`
              });

          let Json = await response.json();

          generateInnerComment(grandparent, Json);

          parent.style.display = "none";
          replyConetent.value = "";

          generateLikeAndHateStatus();

          submittwo_commit();
        }
      };
    };
  }

  function deleteReply(id){

    let thisNode = document.querySelector(`#delBtnOfComment${id}`);
   

    let result = fetch("/deleteComment", {
            method: "POST",
            headers: {'Content-Type': 'application/x-www-form-urlencoded'},
            body: `comment_id=${id}`
            });
   

    let ggp = thisNode.parentNode.parentNode.parentNode;
 
    let gggp = thisNode.parentNode.parentNode.parentNode.parentNode;


    gggp.removeChild(ggp);
  }

  function generateSorting() {

    let sortByTitle = document.querySelector("#sortByTitle");
    let sortByUsername = document.querySelector("#sortByUsername");
    let sortByDate = document.querySelector("#sortByDate");

    sortByTitle.addEventListener('click', async function () {
      let response = await sortArticles("./sortMyArticles?by=title");
    
      adjustContentsPosition(response);
    });

    sortByUsername.addEventListener('click', async function () {
      let response = await sortArticles("./sortMyArticles?by=username");
      
      adjustContentsPosition(response);
    });

    sortByDate.addEventListener('click', async function () {
      let response = await sortArticles("./sortMyArticles?by=date");
      
      adjustContentsPosition(response);
    });
  }

  async function sortArticles(url) {
      let response = await fetch(url);
      
      let Json = await response.json();
    
      return Json;
    }

  function adjustContentsPosition(response) {
    let articlesContent_list = document.querySelectorAll(".content_wrapper");

    articlesContent_list = Array.from(articlesContent_list);
   
    if(articlesContent_list.length != 0) {
      let new_div = document.createElement("div");
      articlesContent_list[0].parentNode.insertBefore(new_div,articlesContent_list[0]);

      for(let i = 0; i < response.length; i++) {
        let order = response[i].article_id;
        for(let j = 0; j < articlesContent_list.length; j++) {
          if(articlesContent_list[j].id.substring(16) == order) {
            articlesContent_list[0].parentNode.insertBefore(articlesContent_list[j], new_div);
          }
        }
      }
      articlesContent_list[0].parentNode.removeChild(new_div);
    }
    
  }

  function isNull( str )
  {
      if ( str == "" ) {
          return true;
      }
      var regu = "^[ ]+$";
      var re = new RegExp(regu);
      return re.test(str);
  };

</script>